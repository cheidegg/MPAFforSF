{
    if(Recompute) {
        MPAFDisplay md;
 
        bool * rtmp= const_cast<bool*> pr;
        *rtmp = false;

    }
    else md.refresh();

    //general parameters ********************* general parameters
    string dir="SUSY3L";
    string fileName="template3L"; //was treeName in LUNE susy_cut_lowpt
    string fileList="template3L"; //CH: since AnaConfig needs a fileName to open, we need to put the data files into a different variable
    string hName="";

    bool mcOnly = false;
  
    //if(md.isInitStatus()) {
    md.anConf.configureNames( dir, fileName, fileList, hName );
    md.anConf.configureData(false, 0, mcOnly);
    //}
  
    //observables **********************
    //string obs[6]={"","","","","",""};
    //md.dp.setObservables("Zmass");
    md.dp.setObservables("BR_NJets");
    //md.dp.setObservables("BR_NBJets");
    //md.dp.setObservables("BR_HT");
    //md.dp.setObservables("BR_MET");
    //md.dp.setObservables("SR_NJets");
    //md.dp.setObservables("SR_NBJets");
    //md.dp.setObservables("SR_HT");
    //md.dp.setObservables("SR_MET");


    //Binning & title ************************* Binning & titre
    string yTitle="number of events";
    int binning=1;
    int addBinBkg=1; //BinB = binning*AddBin
    double rangeY[2]={0,0};
    double rangeX[2]={60.,120.};
    int xDiv[3]={8,6,0};
    int yDiv[3]={6,6,0}; //Nlabel /  sous-Div /ssdiv
    bool logYScale=false;
    bool overFlowBin=false;
    bool underFlowBin=false;
    bool showDMCRatio=true;
    bool showGrid=false;
    float markerSize=0.8;
    float lineWidth=2;

    bool summedSignal=false;
    bool stacking=true;

    bool cmsPrel=true;

    float xt=0.68;
    float yt=0.48;
    float st=0.039;
    string addText="";

    //string autoBinFile="susybinninghigh";
    //md.dp.loadAutoBinning(autoBinFile);

    //Systematic uncertainties ********************************
    bool addSystematics=true;
  
    bool mcStatSyst=true;
    string systSources="";

    bool uncDet=false;

    string Norm="";
  
    //Lumis( or XSections ) pb-1 & KFactors ************************************
    float lumi=10000; //pb-1 19470
    float energy=13; //TeV

    bool useXS=false;

    map<string,float> LumisXS;

    //cross sections    
    //LumisXS[ "WJetsToLNu_HT100to200_PU_S14_POSTLS170_skim"] =      5107581 / (1817.0   * 1.23);
    
    //via XSect
  
    map<string,float> KFactors;
    // if( md.isInitStatus() )
    md.anConf.configureLumi( LumisXS, KFactors, lumi, useXS );

    //===============================================================
    // SDYJetsM50_HT600toInf_PU_S14_POSTLS170_skimamples **************************  samples
    //if( md.isInitStatus() ) {
    md.anConf.addSample( "TTJets_MSDecaysCKM_central_Tune4C_13TeV-madgraph-tauola"        ,  "non-prompt e/mu"    , kRed      );
    md.anConf.addSample( "ZZTo4L_Tune4C_13TeV-powheg-pythia8"                             ,  "WZ+ZZ"              , kGreen    );
    md.anConf.addSample( "WZJetsTo3LNu_Tune4C_13TeV-madgraph-tauola"                      ,  "WZ+ZZ"              , kGreen    );
    md.anConf.addSample( "TTZJets_Tune4C_13TeV-madgraph-tauola"                           ,  "ttZ"                , kBlue     );
    md.anConf.addSample( "TTWJets_Tune4C_13TeV-madgraph-tauola"                           ,  "ttW"                , kYellow   );
    md.anConf.addSample( "GluGluToHToZZTo4L_M-125_13TeV-powheg-pythia6"                   ,  "rare SM"            , kCyan     );
 
    // }
    //===============================================================

    //*********************************************************************Â²
    //Execution macro ******************************************************
 
    //Configuration ================
    //if( md.isInitStatus() ) {
  
    //md.anConf.configureLumi( LumisXS, KFactors, lumi, useXS );
   
    // }

    //plotting ================
    md.dp.setLumiAndEnergy( lumi, energy );
    md.dp.setNormalization( Norm );
    md.dp.configureDisplay(yTitle, rangeY, rangeX, logYScale, xDiv,
			 yDiv, binning, addBinBkg, overFlowBin,
			 underFlowBin, showDMCRatio, showGrid, 
			 stacking, addSystematics, mcStatSyst,
			 markerSize, lineWidth,summedSignal, 
			 mcOnly,cmsPrel, uncDet);

    md.doPlot();
    //md.doStatisticsPlot();
    //md.savePlot("SUSY3L_test");
    // md.dp.addText(xt,yt,st,addText);

}
