/*****************************************************************************
******************************************************************************
******************************************************************************
**                                                                          **
** The Multi-Purpose Analysis Framework                                     **
**                                                                          **
** Constantin Heidegger, CERN, Summer 2014                                  **
**                                                                          **
******************************************************************************
******************************************************************************
*****************************************************************************/

#ifndef CUSTOMTYPES_HH
#define CUSTOMTYPES_HH

#include <TString.h>
#include <string.h>



/*****************************************************************************
******************************************************************************
** TYPE REDEFINITION DEFINTIONS                                             **
******************************************************************************
*****************************************************************************/

typedef std::string Label;




/*****************************************************************************
******************************************************************************
** ENUMERATES                                                              **
******************************************************************************
*****************************************************************************/

enum RunMode {
	normal,
	test
};

enum VerbosityLevel {
	low = 0,
	medium = 1,
	high = 2
};

enum HistogramMode {
	unpublished,
	published
};

enum OutputType {
	histogram,
	list,
	text,
	tree
};

enum SampleType {
	data,
	mc
};



/*****************************************************************************
******************************************************************************
** STRUCTURES AND UNIONS                                                    **
******************************************************************************
*****************************************************************************/

struct SortableLep {
	unsigned int idx;
	int pdgId;
	double pt;
};



#endif
